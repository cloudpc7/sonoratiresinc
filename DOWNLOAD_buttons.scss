// ==========================================================================
// BUTTONS - DRY Component System
// ==========================================================================

.btn {
  @include button-base;

  // SIZES (DRY - using component tokens)
  &--sm {
    @include button-base(sm);
  }
  &--md {
    @include button-base(base);
  }
  &--lg {
    @include button-base(lg);
  }

  // VARIANTS (DRY - using color functions)
  &--primary {
    @include button-variant(color(primary));
  }
  &--secondary {
    @include button-variant(color(secondary));
  }
  &--success {
    @include button-variant(color(success));
  }
  &--warning {
    @include button-variant(color(warning), color(dark));
  }
  &--danger {
    @include button-variant(color(danger));
  }

  // OUTLINE VARIANTS (DRY)
  &--outline-primary {
    @include button-outline(color(primary));
  }
  &--outline-secondary {
    @include button-outline(color(secondary));
  }

  // SPECIAL VARIANTS
  &--ghost {
    background-color: transparent;
    color: color(primary);

    &:hover:not(:disabled) {
      background-color: alpha(color(primary), 0.1);
    }
  }

  &--link {
    background-color: transparent;
    color: color(primary);
    text-decoration: underline;

    &:hover:not(:disabled) {
      color: color(primary-dark);
    }
  }

  // UTILITIES (DRY)
  &--full {
    width: 100%;
  }
  &--icon {
    padding: spacing(sm);
    aspect-ratio: 1;

    svg {
      @include size(1em);
    }
  }

  // LOADING STATE (DRY)
  &--loading {
    position: relative;
    color: transparent;

    &::after {
      content: "";
      @include absolute-center;
      @include size(16px);
      margin-left: -8px;
      margin-top: -8px;
      border-radius: border-radius(full);
      border: 2px solid transparent;
      border-top-color: currentColor;
      animation: spin 1s linear infinite;
    }
  }

  // BUTTON GROUPS (DRY)
  &-group {
    @include flex(row, flex-start, stretch);

    .btn {
      border-radius: 0;

      &:first-child {
        border-top-left-radius: border-radius();
        border-bottom-left-radius: border-radius();
      }

      &:last-child {
        border-top-right-radius: border-radius();
        border-bottom-right-radius: border-radius();
      }

      &:not(:last-child) {
        border-right: border-width() solid alpha(color(white), 0.2);
      }
    }
  }
}

// BRAND BUTTONS (DRY - using brand mixins)
// =============
.call-action {
  @include brand-button-hero;
}
.nav-link {
  @include brand-button-nav;
}
.appt-btn {
  @include brand-button-appointment;
}
.contact-btn {
  @include brand-button-contact;
}

// ANIMATIONS (DRY)
// ----------
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
